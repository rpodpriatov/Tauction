Судя по выводу вашего скрипта check_schema.py, схема вашей базы данных не соответствует моделям SQLAlchemy, используемым в вашем приложении. Это является причиной ошибок типа UndefinedColumn при попытке обратиться к несуществующим столбцам в базе данных.

Несоответствия между схемой базы данных и моделями:

Таблица users:
В базе данных отсутствуют столбцы:
email
password_hash
В модели User эти столбцы присутствуют.
Таблица auctions:
В базе данных отсутствуют столбцы:
starting_price
auction_type
current_dutch_price
dutch_price_decrement
dutch_interval
В модели Auction эти столбцы присутствуют.
Чтобы решить эту проблему, необходимо синхронизировать схему базы данных с вашими моделями, используя Alembic для создания и применения миграций.

Шаги по синхронизации схемы базы данных с моделями с помощью Alembic:
1. Автоматическая генерация миграций:

Убедитесь в правильной настройке Alembic:
В файле alembic.ini убедитесь, что указана правильная строка подключения к базе данных.
В файле env.py убедитесь, что target_metadata указывает на метаданные ваших моделей. Например:
python
Копировать код
from your_app.models import Base
target_metadata = Base.metadata
Создайте новую миграцию:
Выполните команду в терминале:
bash
Копировать код
alembic revision --autogenerate -m "Add missing columns to users and auctions"
Эта команда сравнит текущую схему базы данных с моделями и создаст файл миграции с необходимыми изменениями.
2. Проверьте и отредактируйте файл миграции:

Откройте созданный файл миграции в папке migrations/versions/.
Убедитесь, что в функции upgrade() добавлены недостающие столбцы:
python
Копировать код
def upgrade():
    op.add_column('users', sa.Column('email', sa.String(length=120), nullable=True))
    op.add_column('users', sa.Column('password_hash', sa.String(length=128), nullable=True))

    op.add_column('auctions', sa.Column('starting_price', sa.Float(), nullable=True))
    op.add_column('auctions', sa.Column('auction_type', sa.String(length=11), nullable=True))
    op.add_column('auctions', sa.Column('current_dutch_price', sa.Float(), nullable=True))
    op.add_column('auctions', sa.Column('dutch_price_decrement', sa.Float(), nullable=True))
    op.add_column('auctions', sa.Column('dutch_interval', sa.Integer(), nullable=True))
Если каких-то операций не хватает, добавьте их вручную.
3. Примените миграцию к базе данных:

Перед применением миграции рекомендуется сделать резервную копию базы данных.
Выполните команду:
bash
Копировать код
alembic upgrade head
Это применит миграцию и обновит схему базы данных.
4. Перезапустите приложение и проверьте работу:

После обновления схемы перезапустите ваше приложение.
Проверьте, устранены ли ошибки, связанные с отсутствующими столбцами.
Дополнительные рекомендации:
Проверка соответствия моделей и базы данных:
Убедитесь, что все изменения в моделях отражены в базе данных через миграции.
Регулярное использование миграций:
При каждом изменении моделей создавайте и применяйте миграции, чтобы избежать несоответствий.
Обработка исключений:
Добавьте обработку исключений в ваш код для более информативного логирования и быстрого обнаружения проблем.
Как зафорсить ошибку UndefinedColumn с помощью Alembic:
Если вы хотите специально вызвать ошибку UndefinedColumn для тестирования, вы можете:

Удалить столбец из базы данных:
Создайте новую миграцию, которая удаляет существующий столбец.
bash
Копировать код
alembic revision -m "Remove starting_price from auctions"
В файле миграции добавьте:
python
Копировать код
def upgrade():
    op.drop_column('auctions', 'starting_price')

def downgrade():
    op.add_column('auctions', sa.Column('starting_price', sa.Float(), nullable=True))
Примените миграцию:
bash
Копировать код
alembic upgrade head
Запустить приложение:
Ваше приложение попытается обратиться к столбцу starting_price, которого теперь нет в базе данных, что вызовет ошибку UndefinedColumn.
Заключение
Ошибка UndefinedColumn возникает из-за несоответствия между моделями и схемой базы данных.
Использование Alembic для управления миграциями поможет поддерживать синхронизацию между ними.
Регулярно проверяйте и обновляйте миграции при изменении моделей.
Если у вас есть дополнительные вопросы или требуется помощь с конкретными шагами, пожалуйста, сообщите, и я буду рад помочь!